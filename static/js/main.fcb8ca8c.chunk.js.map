{"version":3,"sources":["Components/ChartDisplay.js","Components/FilterDataBar.js","Components/Header.js","Components/Log.js","Components/TrackingLog.js","Components/AddLogModal.js","Components/Firebase/FirebaseContext.js","App.js","serviceWorker.js","Components/Firebase/Firebase.js","index.js"],"names":["ChartDisplay","props","data","chartLabels","map","log","date","chartWeightData","weight","GraphContainer","labels","datasets","label","options","plugins","datalabels","align","rotation","legend","display","title","text","fontSize","fontFamily","scales","yAxes","ticks","suggestedMin","Math","min","suggestedMax","max","stepSize","maintainAspectRatio","styled","div","FilterDataBar","isAdd","setIsAdd","Bar","AddLogButton","onClick","button","HeaderContainer","header","Heading","h1","Header","Log","calories","activity","description","React","useState","modalOpen","setModal","handleModalClick","LogContainer","SubContainer","Text","isOpen","style","modalStyle","modalSubContainerStyle","ModalText","overlay","backgroundColor","content","justifyContent","width","height","top","left","right","bottom","marginRight","transform","flexDirection","borderBottom","p","TrackingLog","mappedLogs","key","id","textAlign","AddLogModal","newId","handleAddClick","password","setPassword","setWeight","setCalories","didActivity","setActivity","setDescription","currentDate","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","Body","Form","Input","placeholder","onChange","event","target","value","type","TextArea","alert","form","input","textarea","FirebaseContext","createContext","App","setData","firebase","useContext","useEffect","logs","once","snapshot","databaseResponse","val","formatData","console","inputData","arr","push","sortedData","sort","a","b","sortData","className","length","Boolean","window","location","hostname","match","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","Firebase","db","ref","app","initializeApp","this","database","ReactDOM","render","StrictMode","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fcb8ca8c.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport { Line } from \"react-chartjs-2\";\n\nconst ChartDisplay = (props) => {\n  const { data } = props; // main data\n\n  let chartLabels = data.map((log) => log.date);\n  let chartWeightData = data.map((log) => log.weight);\n\n  return (\n    <>\n      <GraphContainer>\n        <Line\n          data={{\n            labels: chartLabels,\n            datasets: [\n              {\n                label: \"Weight\",\n                data: chartWeightData,\n              },\n            ],\n          }}\n          options={{\n            plugins: {\n              datalabels: {\n                align: \"end\",\n                rotation: 20,\n              },\n            },\n            legend: { display: false },\n            title: {\n              display: true,\n              text: \"Daniel's Weight Chart\",\n              fontSize: 18,\n              fontFamily: \"Montserrat\",\n            },\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    suggestedMin: Math.min(...chartWeightData) - 5,\n                    suggestedMax: Math.max(...chartWeightData) + 5,\n                    stepSize: 2,\n                  },\n                },\n              ],\n            },\n            maintainAspectRatio: false,\n          }}\n        />\n      </GraphContainer>\n    </>\n  );\n};\n\nexport default ChartDisplay;\n\nconst GraphContainer = styled.div`\n  margin: 0 auto;\n  width: 96vw;\n  height: 50vh;\n  background-color: #f9f9f9;\n  border-radius: 20px;\n  margin-bottom: 1em;\n  -webkit-box-shadow: 4px 4px 12px -3px rgba(0, 0, 0, 0.63);\n  -moz-box-shadow: 4px 4px 12px -3px rgba(0, 0, 0, 0.63);\n  box-shadow: 4px 4px 12px -3px rgba(0, 0, 0, 0.63);\n\n  @media (min-width: 768px) {\n    width: 70vw;\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst FilterDataBar = (props) => {\n  const { isAdd, setIsAdd } = props;\n\n  return (\n    <Bar>\n      <AddLogButton\n        onClick={() => {\n          setIsAdd(!isAdd);\n        }}\n      >\n        Add Log\n      </AddLogButton>\n    </Bar>\n  );\n};\nexport default FilterDataBar;\n\nconst Bar = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 1em;\n  //   border: 1px solid black;\n`;\n\nconst SubBar = styled.div`\n  width: 50%;\n  display: flex;\n  justify-content: space-between;\n`;\n\n// const FilterButton = styled.button``;\n\nconst AddLogButton = styled.button``;\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst HeaderContainer = styled.header`\n    width: 100%;\n    height: 100px; // change later\n    // border: 1px solid black;\n    text-align: center;\n    margin: 0;\n\n`\n\nconst Heading = styled.h1`\n`\n\n\nexport default function Header() {\n    return (\n        <HeaderContainer>\n            <Heading>Daniel's Fitness Tracker</Heading>\n        </HeaderContainer>\n    )\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\n\nconst Log = ({ props }) => {\n  const { date, weight, calories, activity, description } = props;\n  const [modalOpen, setModal] = React.useState(false);\n\n  function handleModalClick() {\n    setModal(!modalOpen);\n  }\n  return (\n    <LogContainer>\n      <SubContainer>\n        <Text onClick={handleModalClick}>{date}</Text>\n        <Text>Weight: {weight}</Text>\n        <Text>Calories: {calories}</Text>\n        <Modal isOpen={modalOpen} style={modalStyle}>\n          <SubContainer style={modalSubContainerStyle}>\n            <h onClick={handleModalClick}>{date}</h>\n            <ModalText>Weight: {weight}</ModalText>\n            <ModalText>Calories: {calories}</ModalText>\n            <ModalText>Activity: {activity ? \"Yes\" : \"None\"}</ModalText>\n            <ModalText>Description: {description}</ModalText>\n            <button onClick={handleModalClick}>Close</button>\n          </SubContainer>\n        </Modal>\n      </SubContainer>\n    </LogContainer>\n  );\n};\nexport default Log;\n\nconst modalStyle = {\n  overlay: {\n    backgroundColor: \"#00aeef\", //! update this\n  },\n  content: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    width: \"50%\",\n    height: \"50%\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nconst modalSubContainerStyle = {\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  borderBottom: \"none\",\n};\n\nconst LogContainer = styled.div`\n  width: 100vw;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n\n  //   border: 1px solid black;\n  margin: 10px 0 10px 0;\n`;\nconst SubContainer = styled.div`\n  width: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid grey;\n\n  @media (max-width: 768px) {\n    width: 95%;\n  }\n`;\n\nconst Text = styled.p`\n  @media (max-width: 768px) {\n    font-size: 0.9em;\n  }\n`;\n\nconst ModalText = styled(Text)`\n  color: black;\n`\n\n/**\n * Name button as View Notes\n */\n","import React from \"react\";\nimport Log from \"./Log\";\n\nconst TrackingLog = (props) => {\n  const { data } = props;\n\n  let mappedLogs = data.map((log) => {\n    //! Add sort by date, most recent or latest ID assuming the date is most recent\n    return (\n      <Log\n        key={`Date: ${log.date} & ID: ${log.id}`}\n        props={{\n          date: log.date,\n          weight: log.weight,\n          calories: log.calories,\n          activity: log.activity,\n          description: log.description,\n        }}\n      />\n    );\n  });\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h2>Tracking Log</h2>\n      {mappedLogs}\n    </div>\n  );\n};\nexport default TrackingLog;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst AddLogModal = (props) => {\n  const { isAdd, setIsAdd, newId, handleAddClick } = props;\n  const [password, setPassword] = useState(\"\");\n  const [weight, setWeight] = useState(0);\n  const [calories, setCalories] = useState(0);\n  const [didActivity, setActivity] = useState(false);\n  const [description, setDescription] = useState(\"\");\n\n  const getDate = () => {\n    let date = new Date();\n    var dd = String(date.getDate()).padStart(2, \"0\");\n    var mm = String(date.getMonth() + 1).padStart(2, \"0\");\n    var yyyy = date.getFullYear();\n\n    return `${mm}/${dd}/${yyyy}`;\n  };\n\n  const currentDate = getDate();\n\n  return (\n    <Body>\n      <Form>\n        <h2>Add Log for {currentDate}</h2>\n        <Input\n          placeholder=\"Weight\"\n          onChange={(event) => setWeight(event.target.value)}\n        />\n        <Input\n          placeholder=\"Calories\"\n          onChange={(event) => setCalories(event.target.value)}\n        />\n        <p>\n          Activity{\" \"}\n          <input\n            type=\"checkbox\"\n            onChange={() => {\n              setActivity(!didActivity);\n            }}\n          />\n        </p>\n        <TextArea\n          placeholder=\"Notes\"\n          onChange={(event) => setDescription(event.target.value)}\n        />\n        <Input\n          placeholder=\"Password\"\n          type=\"password\"\n          onChange={(event) => setPassword(event.target.value)}\n        />\n        <button type=\"submit\" onClick={() => {\n          password === 'danielhong'\n          ? handleAddClick({\n            id: newId,\n            date: currentDate,\n            weight: weight,\n            calories: calories,\n            activity: didActivity,\n            description: description,\n          })\n          : \n          alert('Incorrect password! Try again.')\n        }}>\n          Add\n        </button>\n        <button type=\"button\" onClick={() => setIsAdd(!isAdd)}>\n          Cancel\n        </button>\n      </Form>\n    </Body>\n  );\n};\n\nexport default AddLogModal;\n\nconst Body = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  // choose color\n  // background-color: ;\n`;\n\nconst Form = styled.form`\n  border: 1px solid black;\n  width: 800px;\n  height: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  // flex-wrap: wrap;\n  // background-color: ;\n\n  @media (max-width: 768px) {\n    width: 95%;\n  }\n`;\nconst Input = styled.input`\n  width: 25%;\n  height: 5%;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\nconst TextArea = styled.textarea`\n  width: 50%;\n  height: 40%;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n","import React, { useContext } from 'react'\n\nexport const FirebaseContext = React.createContext(null)\nexport const useFirebase = () => useContext(FirebaseContext)","import React, { useState, useEffect } from \"react\";\nimport ChartDisplay from \"./Components/ChartDisplay\";\nimport FilterDataBar from \"./Components/FilterDataBar\";\nimport Header from \"./Components/Header\";\nimport TrackingLog from \"./Components/TrackingLog\";\nimport AddLogModal from \"./Components/AddLogModal\";\nimport \"./App.css\";\nimport { useFirebase } from \"./Components/Firebase/FirebaseContext\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [isAdd, setIsAdd] = useState(false);\n  const firebase = useFirebase();\n\n  useEffect(() => {\n    firebase.logs().once('value', (snapshot) => {\n      const databaseResponse = snapshot.val();\n      setData(formatData(databaseResponse))\n    })\n    console.log(data);\n  }, []);\n\n  const formatData = inputData => {\n    const arr = [];\n    \n    for (let log in inputData){\n      const val = inputData[log];\n      val['log'] = log;\n      arr.push(val)\n    }     \n    return arr;\n  }\n\n  const handleAddClick = (log) => {\n    setData([...data, log]); //fix for firebase\n    firebase.logs().push(log, () => {\n      console.log(\"Log successfully tracked!\")\n    })\n    setIsAdd(false);\n  };\n  const sortData = data => {\n   const copy = [...data];\n    return copy.sort((a, b) => b.id - a.id)\n  }\n  const sortedData = sortData(data);\n\n  return (\n    <div className=\"App\">\n      {!isAdd ? (\n        <>\n          <Header />\n          {/* { isAdd ? \"true\" : \"false\"}  */}\n          <ChartDisplay data={data} />\n          <FilterDataBar isAdd={isAdd} setIsAdd={setIsAdd} />\n          <TrackingLog data={sortedData} />\n        </>\n      ) : (\n        <AddLogModal\n          handleAddClick={handleAddClick}\n          isAdd={isAdd}\n          setIsAdd={setIsAdd}\n          newId={data.length}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import app from 'firebase/app';\nimport 'firebase/database';\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_KEY,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET\n}\n\nclass Firebase {\n    constructor(){\n        app.initializeApp(config);\n        this.db = app.database();\n    }\n\n    logs = () => this.db.ref(\"logs\");\n}\n\nexport default Firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase from './Components/Firebase/Firebase'\nimport { FirebaseContext } from './Components/Firebase/FirebaseContext'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}